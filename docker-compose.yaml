# ALWAYS DECLARE FIRST THE DB CONTAINER AND THEN THE APP CONTAINER
version: "3.9"
services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx.dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "${APP_PORT}:5000"
    volumes:
      - "./conf/nginx.conf:/etc/nginx/nginx.conf"
      - "./certs:/etc/nginx/certs"
    depends_on:
      - flask
    networks:
      - my_network
    restart: unless-stopped

  flask:
    build:
      context: .
      dockerfile: ./docker/flask.dockerfile
    environment:
      - MYSQL_HOST=${MYSQL_CONTAINER_NAME}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
      - MONGO_HOST=${MONGO_CONTAINER_NAME}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_PORT=${MONGO_PORT}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - mysql
      - mongo
    volumes:
      - ".:/app"
    networks:
      - my_network
    restart: unless-stopped

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql.dockerfile
    container_name: ${MYSQL_CONTAINER_NAME}
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - my_network

  mongo:
    build:
      context: .
      dockerfile: ./docker/mongo.dockerfile
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DATABASE=${MONGO_DATABASE}
    networks:
      - my_network

volumes:
  sql-data:
networks:
  my_network:
    driver: bridge
